---
import BaseLayout from '../../layouts/BaseLayout.astro'
import BlogPost from '../../components/BlogPost.astro'
import type { InferGetStaticParamsType, GetStaticPaths, MarkdownInstance } from 'astro'

export const getStaticPaths = (async () => {
	const allPosts = await Astro.glob('../posts/*.md') as MarkdownInstance<{tags: string[], title: string}>[]
	const uniqueTags = [...new Set(allPosts.map(post => post.frontmatter.tags || []).flat())]
	return uniqueTags.map((tag) => {
		const posts = allPosts.filter((post) => (post.frontmatter.tags || []).includes(tag))
		return {
			params: { tag },
			props: { posts },
		}
	})
}) satisfies GetStaticPaths

type Params = InferGetStaticParamsType<typeof getStaticPaths>

const { tag  } = Astro.params as Params
const { posts } = Astro.props
---
<BaseLayout pageTitle={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{posts.map(post => <BlogPost url={post.url} title={post.frontmatter.title} />)}
	</ul>
</BaseLayout>
